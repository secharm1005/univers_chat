################
# Subject
# <타입>(적용범위): <제목> 의 형식으로 제목을 아래 공백줄에 작성
# 제목은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성 / 끝에 마침표 금지
# 예) feat: 로그인 기능 추가

# 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)

################
# Body (선택사항)
# 본문(구체적인 내용)을 아랫줄에 작성
# 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)

################
# Footer (선택사항)
# 꼬릿말(footer)을 아랫줄에 작성 (현재 커밋과 관련된 이슈 번호 추가 등)
#####
# BREAKING CHANGE:<description>
# 주요 변경점 또는 강조하고 싶은 변경점
#####
# Fixes: 이슈 수정중 (아직 해결되지 않은 경우)
# Resolves: 이슈를 해결했을 때 사용
# Ref: 참고할 이슈가 있을 때 사용
# Related to: 해당 커밋에 관련된 이슈번호 (아직 해결되지 않은 경우)
# 예) 
# Resolves: #7
# Ref: #8
# Related to: #9, #10

################
# 타입 종류
# feat: 새로운 기능 추가
# fix: 버그 수정
# refactor: 기능을 추가하지 않는 코드 수정, 코드 리팩토링
# style: 코드 의미에 영향을 주지 않는 변경사항(코드 포맷팅, 세미 콜론 누락, 코드 수정이 없는 경우 등)
# docs: 문서 수정
# test: 테스트 코드 추가
# chore: 빌드 부분 혹은 패키지 매니저 수정사항, 설정 변경 등
#####
# 타입 뒤에 추가적인 문맥 정보를 제공하기 위한 목적으로 소괄호를 추가할 수 있다
# 예) feat(MainHeader): 메인 헤더 추가
#####
# 큰 변경점이 있는 경우 타입 뒤에 !(느낌표) 추가
# 예) fix(login)!: 토큰 관련 사항 수정
################